%&
    This is a sample input file for Clike Lexical Analyser.
    It may not be a valid program, as we are not analysing its structure.
    ATTENTION: You are not forced to generate the output reporting file in the format of the given sample output,
               but it must contain the token and the text for each lexeme. (you can define your set of tokens and their names)
&%
%%include "something";

int a()
{
	int a = 0;
	int b;
	b = 10;
	int[] c;
	int[][][] d;
	if (a>10)
	{
		a = 11;
	}
	for (int i=0;i<i*i;i++)
	{
		ke[][] k;
	}
	while  (true)
	{
	}
	for (;true;)
	{
	}
}

extern void print;
int program()
{
	int a = 0;
	int b;
	b = 10;
	int[] c;
	int[][][] d;
	kin[] f;
	lll[][] h;
	h[(a+b)*10 + 20 + a*b[a*v][123+36].df[125][kl.m]][30] = 10;
	sfgdfg g;
    double val = 0.5;
    print("Hello World!");
    %% this is a valid token, but an invalid syntax
}
%% reporting comments or whitespaces are optional; In the given sample output, comments are reported and whitespaces are not